// Folder-specific settings
//
// For a full list of overridable settings, and general information on folder-specific settings,
// see the documentation: https://zed.dev/docs/configuring-zed#settings-files
{
  "format_on_save": "off",
  "file_scan_exclusions": [".cache/"],
  "languages": {
    "Nix": {
      "language_servers": ["nixd", "!nil"],
      "formatter": {
        "external": {
          // initialize with
          // bazel fetch @nixfmt
          "command": "./external/+flake_package_dev_deps+nixfmt/bin/nixfmt",
          "arguments": ["--quiet", "--"]
        }
      }
    },
    "Starlark": {
      "language_servers": ["starpls"],
      "formatter": {
        "external": {
          "command": "./external/buildifier_prebuilt++buildifier_prebuilt_deps_extension+buildifier_darwin_arm64/file/buildifier",
          "arguments": ["--path", "{buffer_path}"]
        }
      }
    }
  },
  // This uses the hermetic clangd from the llvm toolchain, but arguments
  // may vary due to personal preference.
  //
  // https://github.com/zed-industries/zed/discussions/6629#discussioncomment-10493418
  // https://github.com/zed-industries/zed/issues/4295#issuecomment-2287229162
  "lsp": {
    "clangd": {
      "binary": {
        "path": "./external/toolchains_llvm++llvm+llvm_toolchain_llvm/bin/clangd",
        "arguments": [
          "--function-arg-placeholders=0",
          "--completion-parse=always",
          "--all-scopes-completion",
          "--clang-tidy",
          "--debug-origin",
          "--header-insertion=iwyu",
          "--header-insertion-decorators",
          "--include-ineligible-results",
          "--import-insertions",
          "--limit-references=0",
          "--limit-results=0",
          "--rename-file-limit=0",
          "--log=verbose"
        ]
      }
    },
    "nixd": {
      "binary": {
        // initialize with
        // bazel fetch @nixd
        "path": "./external/+flake_package_dev_deps+nixd/bin/nixd"
      },
      "settings": {
        "nixpkgs": {
          "expr": "import (builtins.getFlake \"./tools/nix\").inputs.nixpkgs {}"
        },
        "diagnostic": {
          "suppress": ["sema-unused-def-lambda-noarg-formal"]
        }
      }
    },
    "starpls": {
      "binary": {
        "arguments": [
          "server",
          "--experimental_enable_label_completions",
          "--experimental_use_code_flow_analysis",
          "--experimental_infer_ctx_attributes"
        ]
      }
    }
  }
}
